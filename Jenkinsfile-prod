pipeline {
    agent any

    tools {
        jdk 'JAVA17'
        maven 'maven3'
    }

    environment {
        SCANNER_HOME = tool 'sonar-scanner'
        DOCKER_COMPOSE_FILE = "${env.WORKSPACE}/gtps/docker-compose.yml"
    }

    stages {
        stage('Git Checkout') {
            steps {
                git branch: 'main', changelog: false, poll: false, url: 'https://github.com/jashobantapatra/gtps.git'
            }
        }
        stage('Compile') {
            steps {
                sh "mvn clean compile"
            }
        }
        stage('SonarQube Analysis') {
            steps {
                sh '''
                    ${SCANNER_HOME}/bin/sonar-scanner \
                    -Dsonar.sources=. \
                    -Dsonar.host.url=http://localhost:9000 \
                    -Dsonar.login=squ_f23b3e4e098a44f908be07ed9f3f1eaeb45b3aed \
                    -Dsonar.projectName=gtps \
                    -Dsonar.java.binaries=. \
                    -Dsonar.projectKey=gtps
                '''
            }
        }
        stage('OWASP SCAN') {
            steps {
                dependencyCheck additionalArguments: '--scan ./', odcInstallation: 'DP'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }
        stage('Build Application') {
            steps {
                sh "mvn clean install"
            }
        }
        stage('Build & Push Docker Image') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/','fc1427a3-eca7-4816-bc83-93c5250b7635') {
                        sh "docker compose -f ${DOCKER_COMPOSE_FILE} down"
                        sh "docker compose -f ${DOCKER_COMPOSE_FILE} up -d --build"
                    }
                }
            }
        }
    }
}
